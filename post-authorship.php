<?php/*Plugin Name: Post AuthorshipPlugin URI: http://www.juanvt.com/Description: Allows to write manually the post's author name, for those blogs where you don't want to lose the author's name when you have to delete its user from system.Author: Juan ViñasAuthor URI: http://www.juanvt.com/Version: 1.0License: GPLv2 or Later    Copyright (C) 2014, Juanvt.com    This program is free software: you can redistribute it and/or modify    it under the terms of the GNU General Public License as published by    the Free Software Foundation, either version 2 of the License, or    (at your option) any later version.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program.  If not, see <http://www.gnu.org/licenses/>.    ---        (Esta traducción es meramente informativa y carece de validez legal:)        Este programa es software libre. Puede redistribuirlo y/o modificarlo bajo     los términos de la Licencia Pública General de GNU según es publicada por la     Fundación para el Software Libre, bien de la versión 2 de dicha Licencia o     bien (según su elección) de cualquier versión posterior.    Este programa se distribuye con la esperanza de que sea útil, pero SIN NINGUNA     GARANTÍA, incluso sin la garantía MERCANTIL implícita o sin garantizar la     CONVENIENCIA PARA UN PROPÓSITO PARTICULAR. Véase la Licencia Pública General de     GNU para más detalles.    Debería haber recibido una copia de la Licencia Pública General junto con este     programa. Si no ha sido así, visite <http://www.gnu.org/licenses/>.*/ /** * Carga la traducción / Loads the translation */function paut_load_textdomain(){    load_plugin_textdomain('paut',false,dirname(plugin_basename(__FILE__)).'/languages/');}add_action('plugins_loaded','paut_load_textdomain'); /** * Crea las metaboxes en la vista de edición de posts / Create the metaboxes in the post edit view */ function paut_add_metaboxes(){	add_meta_box("paut_author_name",__("Change Author's name","paut"),"paut_print_author_name_metabox","post","side","default");} add_action("add_meta_boxes","paut_add_metaboxes");/** * Imprime en HTML la meta box de cambiar nombre de autor / Prints (HTML) the meta box for changing the Author's name */function paut_print_author_name_metabox($post){	$savedname = get_post_meta($post->ID,'paut_post_author',true);	wp_nonce_field( 'paut_print_author_name_metabox', 'paut_print_author_name_metabox_nonce' );	?>	<label for='paut_author_name'><?=__("Author's Name","paut")?></label>	<input type='text' id='paut_author_name' name='paut_author_name' value='<?=esc_attr($savedname)?>' size='25'>	<br>	<i><?=__("Leave it blank if you want to use the Original Author based in WordPress user.","paut")?></i>	<br>	<i><b><?=__("Note:","paut")?></b> <?=__("If you want to set other WordPress user as the Author, use the WordPress native option for change the Author.","paut")?></i>	<br>	<i><b><?=__("Important:","paut")?></b> <?=__("If are using some type of Author information box in your post, you must disable it manually.","paut")?></i>	<?php} /** * Guarda la información / Saves the data */function paut_save_author_name($post_id){	/*if(!isset($_POST['paut_print_author_name_metabox_nonce']))		return $post_id;			$nonce = $_POST["paut_print_author_name_metabox"];				if(!wp_verify_nonce($nonce,"paut_print_author_name_metabox"))		return $post_id;*/		if(defined('DOING_AUTOSAVE') && DOING_AUTOSAVE)		return $post_id;			if($_POST['post_type'] == "post"){		if(!current_user_can("edit_post",$post_id))			return $post_id;	}			$value = sanitize_text_field($_POST['paut_author_name']);	update_post_meta($post_id,'paut_post_author',$value);}add_action('save_post','paut_save_author_name');/** * Modifica la salida de la funcion the_author / Modifies the_author function's output. */function paut_the_author(){	$post_id = get_the_ID();	$new_author = get_post_meta($post_id,'paut_post_author',true);	if($new_author != "")		return $new_author;	else{		global $authordata;		return is_object($authordata) ? $authordata->display_name : null;	}} add_filter("the_author","paut_the_author",10,1);/** * Modifica la salida de la funcion the_author_posts_link / Modifies the_author_posts_link function's output. */function paut_the_author_posts_link(){	$post_id = get_the_ID();	$new_author = get_post_meta($post_id,'paut_post_author',true);	if($new_author != "")		return $new_author;	else{		global $authordata;			$link = sprintf(			'<a href="%1$s" title="%2$s" rel="author">%3$s</a>',			esc_url( get_author_posts_url( $authordata->ID, $authordata->user_nicename ) ),			esc_attr( sprintf( __( 'Posts by %s' ), get_the_author() ) ),			get_the_author()		);		return $link;	}} add_filter("the_author_posts_link","paut_the_author_posts_link",10,1);?>